a)Since we can't know which process will be accepted first by the CPU, there are many possible outputs.
It's expected that fork doesn't fail, so that the two most likely to happen are the ones that output:
Output 1 (Notice that this output order will, eventually, will repeat or not.
"1. x = 2"
"2. x = 0"
"3. 0; x = 2"
"3. 1234; x = 0"

Output 2 (Child process can output after the parent process, thus, output can be like this also)
"2. x = 0"
"1. x = 2"
"3. 1234; x = 0"
"3. 0; x = 2"

Output 3 (That outputs assumed that fork didn't fail, but if it fail, in this specific program, will proceed and output something like this)
"2. x = 0"
"3. -1; x = 0"

b)No, it's not a sure thing that the output of the printf() in line 9 will be before the printf() in line 11. If the child process runs first than the father process, that will not happen.

