Items.

1. n/a

2. int main(){

    sem_t *semaphore;
    sem_t *semaphore2;

    int n=0;


   semaphore = sem_open();
   semaphore2 = sem_open();


    pid_t p;

    p = fork();

    if(p>0){
        while(TRUE){
            sem_wait(semaphore);
            printf("S");
            fflush(stdout);
            sem_post(semaphore2);
        } 
    } else {
        while(TRUE){
            sem_wait(semaphore2);
            printf("C");
            fflush(stdout);
            sem_post(semaphore);
        }
    }

    sem_close(semaphore);
    sem_close(semaphore2);


    if(p>0){
        wait(NULL);
    } else {
        exit(EXIT_SUCCESS); //when a process dies, voluntarily or unvoluntarily, the sem_close operation occurs automatically
    }

    
    sem_unlink("ex8semA");
    sem_unlink("ex8semB");

    return EXIT_SUCCESS;
}

3. ex8.c